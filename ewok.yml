build:
    box:
      id: alpine
      cmd: /bin/sh
    steps:
       # - shellcheck
        - script:
            name: install apk packages
            code: apk update && apk add ca-certificates openssh curl

        - script:
            name: config
            code: |
                export KUBERNETES_VERSION="1.3.4"
                export KUBERNETES_SHA256="81f0e3c788241419be1ee961da8804fdb16657b86e7edba8c7070932e8a50fe7"
                echo "Installing version $KUBERNETES_VERSION of kubernetes"

        - script:
            name: fetch kubernetes archive
            code: |
                curl -L https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl > $WERCKER_OUTPUT_DIR/kubectl


        - script:
            name: validate kubernetes archive
            code: |
                cat $WERCKER_OUTPUT_DIR/kubectl| sha256sum | grep -q "$KUBERNETES_SHA256"

        - script:
            name: prepare output
            code: |
                cp "$WERCKER_ROOT/LICENSE" "$WERCKER_ROOT/README.md" "$WERCKER_ROOT/run.sh" "$WERCKER_ROOT/wercker.yml" "$WERCKER_ROOT/wercker-step.yml" "$WERCKER_OUTPUT_DIR"
                chmod ugo+rx "$WERCKER_OUTPUT_DIR/kubectl"

test-busybox:
    box:
      id: busybox
      cmd: /bin/sh
    steps:
      - script:
          code: |
              export WERCKER_KUBECTL_COMMAND="version --client"
              export WERCKER_STEP_ROOT=$WERCKER_SOURCE_DIR
              source run.sh

test-alpine:
    box:
      id: alpine
      cmd: /bin/sh
    steps:
      - script:
          code: |
              export WERCKER_KUBECTL_COMMAND="version --client"
              export WERCKER_STEP_ROOT=$WERCKER_SOURCE_DIR
              source run.sh

test-debian:
    box: debian
    steps:
      - script:
          code: |
              export WERCKER_KUBECTL_COMMAND="version --client"
              export WERCKER_STEP_ROOT=$WERCKER_SOURCE_DIR
              source run.sh
